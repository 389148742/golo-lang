The Golo Programming Language
=============================
Julien Ponge <julien.ponge@insa-lyon.fr>

This is the documentation for the Golo programming language.

CAUTION: This is a work in progress. Golo is even far from being feature-complete. You have been
warned, but hey, you somehow knew it I'm pretty sure.

[NOTE]
.Current status of the language and discussion
====
The current version of Golo supports:

* the definition of modules,
* the definition of public and local (*private*) functions,
* closures as first-class citizen,
* common control-flow constructions,
* exceptions with `try` / (untyped) `catch` / `finally` blocks,
* calling Java from Golo,
* loading Golo from Java either through pre-compiled classes or through a classloader,
* pimping existing classes,
* dynamic objects.

It is possible that `catch` blocks will support an implicit decomposition based on the type, and
that implicitly translates to a `case` construct.

Golo does not perform any type coercion at runtime, such as converting a `String` to an `Integer`.
Coercion makes code more concise, yet this is something that happens **implicitly**, and Golo
strives to avoid implicitness. 

That's still a long road ahead :-)

Thanks for testing this private Golo drop!

-- Julien
====

.Copyright and License Notice
[source,text]
----
Copyright 2012-2013 Institut National des Sciences Appliqu√©es de Lyon (INSA-Lyon)
 
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
----

include::basics.asciidoc[]
include::functions.asciidoc[]
include::java-interop.asciidoc[]
include::control-flow.asciidoc[]
include::exceptions.asciidoc[]
include::closures.asciidoc[]
include::predefined-functions.asciidoc[]
include::pimps.asciidoc[]
include::dynamic-objects.asciidoc[]
include::workers.asciidoc[]
include::pitfalls.asciidoc[]

