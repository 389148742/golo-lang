options {
  MULTI=true;
  VISITOR=true;
}

PARSER_BEGIN(Simple)

package sample.parser;

public class Simple {
  public static void main(String args[]) {
      System.out.println("Reading from standard input...");
      Simple t = new Simple(System.in);
      try {
        SimpleNode n = t.Start();
        n.dump("");
        System.out.println("Thank you.");
      } catch (Exception e) {
        System.out.println("Oops.");
        System.out.println(e.getMessage());
        e.printStackTrace();
      }
    }
}

PARSER_END(Simple)

SKIP :
{
  " " | "\t" | "\r" | "\n"
}

TOKEN :
{
  < NUMBER: ["1"-"9"] (["0"-"9"])* >
}

SimpleNode Start() : {}
{
  Number()
  { return jjtThis; }
}

void Number() :
{
  Token n;
}
{
  n=<NUMBER>
  { jjtThis.jjtSetValue(n.image); }
}
